Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {Ref : AWSEBSecurityGroup}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  /etc/nginx/conf.d/000_my_ssl.conf:
    mode: "000755"
    owner: root
    group: root
    content: |
      # HTTPS server
      server {
          listen       8080;
          return       301 https://$host$request_uri;
      }
      server {
          listen       443 ssl spdy;
          server_name  localhost;
          
          ssl                  on;
          ssl_certificate      /etc/pki/tls/certs/server.crt;
          ssl_certificate_key  /etc/pki/tls/certs/server.key;
          ssl_dhparam          /etc/pki/tls/certs/dhparam.pem;
          
          ssl_session_timeout  10m;
          
          ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers  'AES128+EECDH:AES128+EDH:!aNULL';
          ssl_prefer_server_ciphers   on;
          ssl_session_cache shared:SSL:5m;

          ssl_stapling on;
          ssl_stapling_verify on;
          resolver 8.8.8.8 8.8.4.4 valid=10m;
          resolver_timeout 5s;

          add_header    Strict-Transport-Security "max-age=31536000";
          add_header    X-Frame-Options "DENY";
          add_header    X-Content-Type-Options nosniff;

          location / {
              proxy_pass  http://nodejs;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }
      }
